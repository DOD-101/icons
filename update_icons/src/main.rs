use std::path::PathBuf;

use crate::code_generator::Generator;

mod code_generator;
mod icon_list;

const HTML_START_SEQ: &str = "<!-- AUTOGENERATED";
const HTML_END_SEQ: &str = "<!-- END AUTOGENERATED";
const ICONS16: &str = "../icons16.md";
const ICONS32: &str = "../icons32.md";
const ICONS64: &str = "../icons64.md";

pub struct IconInfo {
    pub name: String,
    pub path: PathBuf,
    pub source: String,
}

impl IconInfo {
    fn file_path(&self) -> String {
        format!(
            "icons/{}/{}",
            self.source,
            self.path.file_name().unwrap().to_str().unwrap()
        )
    }
}

fn main() {
    let icon_list = icon_list::get_icons(&["icon-development-kit", "fluentui-system-icons"]);

    let icons16_generator = Generator {
        path: ICONS16,
        start_seq: HTML_START_SEQ,
        end_seq: HTML_END_SEQ,
    };
    icons16_generator.generate_features(&icon_list, |icon| {
        let name = &icon.name;
        let icon_path = icon.file_path();
        format!(
            "  <a href=\"{icon_path}\">
    <img src=\"{icon_path}\" width=\"16\" alt=\"{name}\">
  </a>"
        )
    });

    let icons32_generator = Generator {
        path: ICONS32,
        start_seq: HTML_START_SEQ,
        end_seq: HTML_END_SEQ,
    };
    icons32_generator.generate_features(&icon_list, |icon| {
        let name = &icon.name;
        let icon_path = icon.file_path();
        format!(
            "  <a href=\"{icon_path}\">
    <img src=\"{icon_path}\" width=\"32\" alt=\"{name}\">
  </a>"
        )
    });

    let icons64_generator = Generator {
        path: ICONS64,
        start_seq: HTML_START_SEQ,
        end_seq: HTML_END_SEQ,
    };
    icons64_generator.generate_features(&icon_list, |icon| {
        let name = &icon.name;
        let icon_path = icon.file_path();
        format!(
            "  <a href=\"{icon_path}\">
    <img src=\"{icon_path}\" width=\"64\" alt=\"{name}\">
  </a>"
        )
    });
}
